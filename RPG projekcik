using System;

namespace RPG_Game
{
    class Player
    {
        public string Name { get; set; }
        public int Health { get; set; }
        public int Damage { get; set; }

        public Player(string name, int health, int damage)
        {
            Name = name;
            Health = health;
            Damage = damage;
        }

        public void Attack(string monsterName, int monsterHealth)
        {
            Console.WriteLine($"{Name} atakuje {monsterName} i zadaje {Damage} obrażeń.");
            monsterHealth -= Damage;
        }

        public void Heal()
        {
            Console.WriteLine("Używasz leczenia.");
            Health += 20;

            if (Health > 100)
            {
                Health = 100;
            }

            Console.WriteLine($"Twoje zdrowie zostało zregenerowane. Aktualne zdrowie: {Health}");
        }
    }

    class Monster
    {
        public string Name { get; set; }
        public int Health { get; set; }
        public int Damage { get; set; }

        public Monster(string name, int health, int damage)
        {
            Name = name;
            Health = health;
            Damage = damage;
        }

        public void Attack(string playerName, int playerHealth)
        {
            Console.WriteLine($"{Name} atakuje {playerName} i zadaje {Damage} obrażeń.");
            playerHealth -= Damage;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Witaj w grze RPG walki z potworami!");
            Console.WriteLine("Podaj swoje imię:");
            string playerName = Console.ReadLine();

            Console.WriteLine("Wybierz swoją klasę:");
            Console.WriteLine("1. Wojownik");
            Console.WriteLine("2. Łucznik");
            Console.WriteLine("3. Mag");

            int playerClass = int.Parse(Console.ReadLine());

            Player player = CreatePlayer(playerName, playerClass);

            Monster[] monsters = CreateMonsters();

            Console.WriteLine($"Twoje zdrowie: {player.Health}");

            while (player.Health > 0)
            {
                Console.WriteLine("Wybierz potwora do walki:");
                for (int i = 0; i < monsters.Length; i++)
                {
                    Console.WriteLine($"{i + 1}. {monsters[i].Name} (zdrowie: {monsters[i].Health})");
                }

                int monsterIndex = int.Parse(Console.ReadLine()) - 1;

                Console.WriteLine($"Rozpoczyna się walka z {monsters[monsterIndex].Name}!");

                Monster currentMonster = monsters[monsterIndex];

                while (player.Health > 0 && currentMonster.Health > 0)
                {
                    Console.WriteLine("Co chcesz zrobić?");
                    Console.WriteLine("1. Atakuj potwora");
                    Console.WriteLine("2. Użyj leczenia");

                    int choice = int.Parse(Console.ReadLine());

                    if (choice == 1)
                    {
                        player.Attack(currentMonster.Name, currentMonster.Health);

                        if (currentMonster.Health <= 0)
                        {
                            Console.WriteLine($"{player.Name} pokonuje {currentMonster.Name}!");
                            break;
                        }

                        currentMonster.Attack(player.Name, player.Health);
                    }
                    else if (choice == 2)
                    {
                        player.Heal();
                    }
                    else
                    {
                        Console.WriteLine("Nieprawidłowy wybór. Wybierz 1 lub 2.");
                    }
                }

                if (player.Health <= 0)
                {
                    Console.WriteLine($"{player.Name}, zostałeś pokonany. Koniec gry!");
                    break;
                }
            }

            Console.WriteLine("Czy chcesz zagrać ponownie? (Tak/Nie)");
            string playAgain = Console.ReadLine();

            if (playAgain.ToLower() != "tak")
            {
                Console.WriteLine("Dziękujemy za grę. Do zobaczenia!");
            }
        }

        static Player CreatePlayer(string name, int playerClass)
        {
            switch (playerClass)
            {
                case 1:
                    return new Player(name, 100, 20);
                case 2:
                    return new Player(name, 80, 25);
                case 3:
                    return new Player(name, 60, 30);
                default:
                    Console.WriteLine("Nieprawidłowy wybór. Tworzony jest domyślny gracz.");
                    return new Player(name, 100, 20);
            }
        }

        static Monster[] CreateMonsters()
        {
            Monster[] monsters = new Monster[5];

            monsters[0] = new Monster("Goblin", 50, 10);
            monsters[1] = new Monster("Ork", 60, 15);
            monsters[2] = new Monster("Troll", 70, 20);
            monsters[3] = new Monster("Smok", 80, 25);
            monsters[4] = new Monster("Demon", 90, 30);

            return monsters;
        }
    }
}
